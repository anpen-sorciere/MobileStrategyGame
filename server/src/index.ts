import express from 'express';
import { createServer } from 'http';
import { Server } from 'socket.io';
import { randomUUID } from 'crypto';

const app = express();
const httpServer = createServer(app);
const io = new Server(httpServer, {
    cors: {
        origin: "*",
        methods: ["GET", "POST"]
    }
});

const PORT = 3000;

// Êé•Á∂ö‰∏≠„ÅÆ„É¶„Éº„Ç∂„Éº„ÇíÁÆ°ÁêÜ
const connectedUsers = new Map<string, string>();

// HTTP„Çµ„Éº„Éê„Éº„ÅÆËµ∑Âãï
httpServer.listen(PORT, () => {
    console.log(`üöÄ Server is running on http://localhost:${PORT}`);
});

// Socket.IOÊé•Á∂öÂá¶ÁêÜ
io.on('connection', (socket) => {
    // ‰∏ÄÊÑè„ÅÆuserId„ÇíÁîüÊàê
    const userId = randomUUID();
    
    // „É¶„Éº„Ç∂„ÉºÊÉÖÂ†±„Çí‰øùÂ≠ò
    connectedUsers.set(socket.id, userId);
    
    console.log(`‚úÖ Client connected:`);
    console.log(`   Socket ID: ${socket.id}`);
    console.log(`   User ID: ${userId}`);
    
    // „ÇØ„É©„Ç§„Ç¢„É≥„Éà„Å´userId„Å®„Ç¶„Çß„É´„Ç´„É†„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ‰ø°
    socket.emit('message', {
        type: 'welcome',
        userId: userId,
        content: 'Welcome to MobileStrategyGame Server!'
    });
    
    // Êé•Á∂öÂàáÊñ≠ÊôÇ„ÅÆÂá¶ÁêÜ
    socket.on('disconnect', () => {
        const disconnectedUserId = connectedUsers.get(socket.id);
        console.log(`‚ùå Client disconnected:`);
        console.log(`   Socket ID: ${socket.id}`);
        console.log(`   User ID: ${disconnectedUserId}`);
        
        // „É¶„Éº„Ç∂„ÉºÊÉÖÂ†±„ÇíÂâäÈô§
        connectedUsers.delete(socket.id);
    });
    
    // ‰ªªÊÑè„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÂèó‰ø°„Åó„ÅüÂ†¥Âêà„ÅÆÂá¶ÁêÜ
    socket.on('message', (data) => {
        const userId = connectedUsers.get(socket.id);
        console.log(`üì® Received message from User ID: ${userId} (Socket: ${socket.id}):`, data);
    });
});

// „Ç®„É©„Éº„Éè„É≥„Éâ„É™„É≥„Ç∞
io.on('error', (error) => {
    console.error('‚ùå Socket.IO error:', error);
});

console.log('‚ö° Socket.IO server initialized');

